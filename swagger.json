{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Wallet",
    "description": "Wallet API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:4000/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],

  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFail"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },

          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponseConflict"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFail"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Creating a transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFail"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },

          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponseConflict"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "test"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "201"
          },
          "data": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "60eafde331f472359c212139"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "test"
              }
            }
          }
        },

        "example": [
          {
            "status": "success",
            "code": 201,
            "data": {
              "id": "60ead54411bda83a9c1e2945",
              "email": "test3@i.ua",
              "name": "test"
            }
          }
        ]
      },
      "RegistrationResponseConflict": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "error"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "409"
          },
          "message": {
            "type": "string",
            "description": "message error"
          }
        },

        "example": [
          {
            "status": "error",
            "code": 409,
            "message": "string"
          }
        ]
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "error"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "400"
          },
          "message": {
            "type": "string",
            "description": "message error"
          }
        },

        "example": [
          {
            "status": "error",
            "code": 400,
            "message": "message error"
          }
        ]
      },
      "ResponseFail": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "fail"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "500"
          },
          "message": {
            "type": "string",
            "description": "message error"
          }
        },

        "example": [
          {
            "status": "fail",
            "code": 500,
            "message": "user validation failed: password: Password is required"
          }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "OK"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTg3YWI0ZWM4OTQzMmI1NGNhOTllMSIsImlhdCI6MTYyNjAxNTM4NCwiZXhwIjoxNjI2MDIyNTg0fQ.w1PY6aFbH2vTmHPlrNwNrSbk3LTy2aBqEvEOG1K4238"
              }
            }
          }
        },

        "example": [
          {
            "status": "OK",
            "code": 200,
            "data": {
              "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTg3YWI0ZWM4OTQzMmI1NGNhOTllMSIsImlhdCI6MTYyNjAxNTM4NCwiZXhwIjoxNjI2MDIyNTg0fQ.w1PY6aFbH2vTmHPlrNwNrSbk3LTy2aBqEvEOG1K4238"
            }
          }
        ]
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "error"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "message error"
          }
        },

        "example": [
          {
            "status": "error",
            "code": 401,
            "message": "Invalid credentials"
          }
        ]
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {}
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "OK"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "test"
              }
            }
          }
        },

        "example": [
          {
            "status": "OK",
            "code": 200,
            "data": {
              "email": "test@i.ua",
              "name": "test"
            }
          }
        ]
      },
      "CreateTransactionRequest": {
        "type": "object",
        "required": ["date", "type", "category", "sum"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction's date",
            "format": "date"
          },
          "type": {
            "type": "string",
            "description": "Transaction's type"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category must belong to list",
            "example": "Доход"
          },
          "sum": {
            "type": "number",
            "description": "Transaction's amount",
            "example": 10
          },
          "comments": {
            "type": "string",
            "description": "Transaction'comments"
          }
        }
      },
      "CreateTransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "201"
          },
          "data": {
            "type": "object",
            "properties": {
              "transaction": {
                "type": "object",
                "properties": {
                  "category": {
                    "type": "string",
                    "description": "Transaction's category"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Transaction's id"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Transaction's owner "
                  },
                  "date": {
                    "type": "string",
                    "description": "Transaction's date",
                    "format": "date"
                  },
                  "type": {
                    "type": "string",
                    "description": "Transaction's type"
                  },
                  "sum": {
                    "type": "number",
                    "description": "Transaction's amount"
                  },
                  "balance": {
                    "type": "number",
                    "description": "Transaction's balance"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Transaction's comments"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": " Transaction creation time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Transaction update time"
                  }
                }
              }
            }
          }
        },

        "example": [
          {
            "status": "success",
            "code": 201,
            "data": {
              "transaction": {
                "category": "Доход",
                "_id": "60eb4a0f59ad203048d56f99",
                "owner": "60eb338e23a0d10d98905aab",
                "date": "2021-12-30T09:47:39.488Z",
                "type": "+",
                "comments": "кот",
                "sum": 1000,
                "balance": 3000,
                "createdAt": "2021-07-11T19:44:15.735Z",
                "updatedAt": "2021-07-11T19:44:15.735Z"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
